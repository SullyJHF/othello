echo "🔍 Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo "${2}${1}${NC}"
}

# Function to run a command and check its exit status
run_check() {
    local check_name="$1"
    local command="$2"
    
    print_status "⏳ Running $check_name..." "$YELLOW"
    
    if eval $command; then
        print_status "✅ $check_name passed" "$GREEN"
        return 0
    else
        print_status "❌ $check_name failed" "$RED"
        return 1
    fi
}

# Track if any checks fail
CHECKS_FAILED=0

# 1. Type checking
if ! run_check "TypeScript type check" "npm run type-check"; then
    CHECKS_FAILED=1
fi

# 2. Linting (check for errors, warnings allowed for now)
if ! run_check "ESLint" "npm run lint"; then
    CHECKS_FAILED=1
    print_status "💡 Tip: Run 'npm run lint:fix' to auto-fix some issues" "$YELLOW"
fi

# 3. Prettier formatting check
if ! run_check "Prettier formatting" "npm run format:check"; then
    CHECKS_FAILED=1
    print_status "💡 Tip: Run 'npm run format' to fix formatting issues" "$YELLOW"
fi

# 4. Tests
if ! run_check "Tests" "npm run test"; then
    CHECKS_FAILED=1
fi

# Final result
if [ $CHECKS_FAILED -eq 0 ]; then
    print_status "🎉 All pre-commit checks passed! Ready to commit." "$GREEN"
    exit 0
else
    print_status "🚫 Pre-commit checks failed. Please fix the issues above before committing." "$RED"
    print_status "📋 Quick fix commands:" "$YELLOW"
    print_status "  • npm run lint:fix    (fix linting issues)" "$YELLOW"
    print_status "  • npm run format      (fix formatting)" "$YELLOW"
    print_status "  • npm run type-check  (check types)" "$YELLOW"
    print_status "  • npm run test        (run tests)" "$YELLOW"
    exit 1
fi